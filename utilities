#!/bin/bash

red='\033[1;31m'
green='\033[1;32m'
no_colour='\033[0m'
no_colour_bold='\033[1m'

print_result() {
  if [ "$1" -eq 0 ]; then
    print_success "$2"
  else
    print_error "$2"
  fi
  return "$1"
}

print_colour() {
  printf "$1$2$no_colour"
}

print_multiline() {
  print_colour "$no_colour_bold" \
               "\n$1\n\n"
}

print_heading() {
  print_colour "$no_colour_bold" \
               "\n$1\n\n"
}

print_notification() {
  print_colour "$no_colour_bold" \
               "[ • ] $1\n"
}

print_success() {
  print_colour "$green" \
               "[ ✔︎ ] $1\n"
}

print_error() {
  print_colour "$red" \
               "[ ✘ ] $1\n"
}

create_symlink() {
  local target="$1"  # The target file or directory of the symlink.
  local symlink="$2" # The symlink name.

  # Check to see if the target exists because 'ln' doesn't.
  if [ -e "$target" ]; then
    # -f, --force:          Replace symlink if it already exists.
    # -s, --symbolic:       Make symbolic links instead of hard links.
    # -n, --no-dereference: If symlink points to an existing directory, replace
    #                       it instead of creating another symlink inside it.

    if ln -fsn "$target" "$symlink"; then
      print_success "$symlink → $target"
      return 0
    fi
  fi

  print_error "$symlink → $target"
  return 1
}

brew_install() {
  local formula_readable_name="$1"
  local formula="$2"
  local tap_value="$3"
  local cask="$4"

  if [ -n "$tap_value" ]; then
    if ! brew tap "$tap_value"; then
      print_error "$formula ('brew tap $tap_value' failed)" && exit 1
    fi
  fi

  if brew list "$formula" &> /dev/null; then
    # Package is already installed.
    print_success "$formula_readable_name"
  else
    # Install package.
    if [ -n "$cask" ]; then
      if ! brew install --cask $formula; then
        # Exit if installation fails.
        print_error "$formula_readable_name" && exit 1
      fi
    else
      if ! brew install $formula; then
        # Exit if installation fails.
        print_error "$formula_readable_name" && exit 1
      fi
    fi
    print_success "$formula_readable_name"
  fi
}

start_notice() {
cat << EOF
//////////////////////////////////////////////////////////////////
//                                                              //
//  Mac Setup                                                   //
//                                                              //
//////////////////////////////////////////////////////////////////
//                                                              //
//  This script will install/configure:                         //
//    • Dotfiles                                                //
//    • Homebrew                                                //
//    • Fish                                                    //
//    • asdf                                                    //
//    • Ruby                                                    //
//    • Node.js                                                 //
//    • Git                                                     //
//    • GitHub SSH Keys                                         //
//    • Rails                                                   //
//    • PostgreSQL                                              //
//    • Redis                                                   //
//    • Vim                                                     //
//    • Sublime Text Settings                                   //
//    • MacOS Settings                                          //
//    • Terminal Profile                                        //
//                                                              //
//////////////////////////////////////////////////////////////////
EOF
}

end_notice() {
cat << EOF
//////////////////////////////////////////////////////////////////
//                                                              //
//  All done! ฅ^•ﻌ•^ฅ                                           //
//                                                              //
//  You must open a new shell for some changes to take effect.  //
//                                                              //
//////////////////////////////////////////////////////////////////
EOF
}
